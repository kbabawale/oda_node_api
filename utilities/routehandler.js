//Define all the route inside the json object and present it to the app.js

class routeHandlers {
   static handleRoutes() {
      const routeHandler = {
         register: "/api/register",
         updateAccount: "/api/account/update",
         updateAccountType: "/api/account/type/update",
         login: "/api/login",
         validatePassword: "/api/validatepw",
         changePassword: "/api/changepw",
         activateUser: "/api/activate",
         createStore: "/api/store/create",
         updateStore: "/api/store/update",
         getStoreDetails: "/api/store/details",
         deleteStore: "/api/store/delete",
         createProduct: "/api/product/create",
         getProductCategories: "/api/product/categories",
         getProductSubCategories: "/api/product/subcategories",
         getProductDetails: "/api/product/details",
         createGenericProduct: "/api/product/generic/create",
         deleteProduct: "/api/product/delete",
         updateProduct: "/api/product/update",
         searchGeneric: "/api/product/generic/search",
         createOrder: "/api/orders/create",
         cancelOrder: "/api/orders/cancel",
         getAdminRoles: "/api/admin/getroles",
         getUsers: "/api/admin/getusers",
         deleteAccount: "/api/account/delete",
         mapRoles: "/api/admin/maproles",
         getAllRoles: "/api/admin/getallroles",
         getUser: "/api/admin/getuser",
         createMarketLead: "/api/admin/marketlead/create",
         deleteMarketLead: "/api/admin/marketlead/delete",
         editMarketLead: "/api/admin/marketlead/update",
         getMarketLead: "/api/admin/marketlead/all",
         createRole: "/api/admin/createrole",
         createVehicle: "/api/admin/vehicle/create",
         deleteVehicle: "/api/admin/vehicle/delete",
         getVehicleList: "/api/admin/vehicle/all",
         createStoreType: "/api/admin/storetype/create",
         getStoreTypes: "/api/admin/storetype/all",
         deleteStoreType: "/api/admin/storetype/delete",
         getContacts: "/api/contacts",
         landingPage: "/api/home",
         available: "/api/available",
         updateLocation: "/api/location/update",
         allOrders: "/api/orders/all",
         allPendingOrders: "/api/orders/pending",
         acceptOrder: "/api/orders/accept",
         declineOrder: "/api/orders/decline",
         createBrandProduct: "/api/product/brand/create",
         approveBrandProduct: "/api/product/brand/approve",
         getBrandProduct: "/api/product/brand/all",
         getGenericProduct: "/api/product/generic/all",
         declineBrandProduct: "/api/product/brand/decline",
         acceptTask: "/api/tasks/accept",
         declineTask: "/api/tasks/decline",
         pickUpStart: "/api/tasks/pickup/start",
         pickUpEnd: "/api/tasks/pickup/end",
         dropOffStart: "/api/tasks/dropoff/start",
         dropOffEnd: "/api/tasks/dropoff/end",
         getRoutes: "/api/routes/all",
         getAllTask: "/api/tasks/all",
         getPendingTask: "/api/tasks/pending/all",
         landingPageCategory: "/api/home/category",
         getProductLanding: "/api/home/product",
         updateMainSettings: "/api/admin/settings/update",
         getMainSettings: "/api/admin/settings",
         fareSettings: "/api/admin/vehicle/deliverysetup",
         vehicleDelSettings: "/api/admin/vehicle/getsetup",

         temp: "/api/updateusers"
      };
      return JSON.stringify(routeHandler);
   }
}

module.exports = routeHandlers;